
#---------------------------------------------
#-- Main config 
#---------------------------------------------

set -g mouse on  							                                # mouse scroll
# set -g terminal-overrides ",rxvt-uni*:smcup@:rmcup@"                      # use urxvt scroll
set -g default-command "${SHELL}"			                                # disable login shell
set -g history-limit 8000                                                   # set history limit
set-option -ga terminal-override ',rxvt-uni*:XT:Ms=\E]52;%p1%s;%p2%s\007'   # mouse scroll paste
# do not enable below option it make weird background
# setw -g monitor-activity on
set -g visual-activity on
set -g mode-keys vi

# set -ga terminal-overrides ",rxvt-unicode-256color:Tc"
# set -g default-terminal "tmux-256color"
# set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q'
# set-environment -g COLORTERM "truecolor"

#-- nvim requirement
set-option -sg escape-time 10
set-option -g focus-events on
set-option -sa terminal-features ',rxvt-unicode-256color:RGB'



#---------------------------------------------
#-- Look feel 
#---------------------------------------------
# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1
bind-key -n M-3 split-window -h
bind-key -n M-4 split-window -v

# border color
# set -g pane-active-border-style bg=default,fg=default
# set -g pane-border-style fg=green
# set -g message-style 'fg=white bg=black bold'

# status left
# set -g status-left ''
# set -g status-position bottom
# set -g status-justify left
# Colors
# set-option -g status-style fg=default,bg=default,default
# set-option -g status-style fg="#666666",bg=default
# set-option -g status-interval 1
# set-option -g status-style fg=white,bg=default
# set-option -g status-style-active fg=red,bg=black
# set-window-option -g window-status-style fg="#666666",bg=default,default
# set-window-option -g window-status-current-style fg=red,bg=default,default
# set-option -g message-style fg=white,bg=black,bright

# Status bar
set-option -g status-position bottom
set -g status-justify left

set -g status-left-length 85
set -g status-left "#[fg=magenta] #[bg=gray]"
# with |
# set -g window-status-current-format "#[fg=black,bold bg=default]│#[fg=red bg=default]> #W#[fg=black,bold bg=default]│"
# set -g window-status-format "#[fg=black,bold bg=default]│#[fg=colour000 bg=default]#W#[fg=black,bold bg=default]│"
# without |
set -g window-status-current-format "#[fg=green1 bg=default]#I:#W "
set -g window-status-format "#I:#[fg=colour000 bg=default]#W "
# set background green or not
# set -g status-style bg=default
# set -g status-style bg=RoyalBlue1
# set -g status-style bg=LightSteelBlue
# set -g status-style bg=LightSteelBlue3
set -g status-style bg=colour243


set -g status-right ''



#---------------------------------------------
#-- Keyboard
#---------------------------------------------
# S - shift, M - alt, C - control

# unbind
unbind C-d
bind -n C-d send-prefix

# enter copy mode
# bind -n C-i copy-mode
# bind -n M-i copy-mode

# beggining of line
# bind-key -T copy-mode-vi M-n send-keys -X start-of-line
bind-key -T copy-mode-vi N send-keys -X start-of-line
bind-key -T copy-mode-vi L send-keys -X end-of-line
# bind-key -T copy-mode-vi B send-keys -X end-of-line
# bind-key -T copy-mode-vi n send-keys -X start-of-line

# end of line
bind-key -T copy-mode-vi M-l send-keys -X end-of-line

# begin selection
# bind -n C-space copy-mode \; send-keys -X begin-selection
bind -n C-space copy-mode 
bind-key -T copy-mode-vi v send-keys -X begin-selection

# search
bind -n C-s copy-mode \; command-prompt -i -I "#{pane_search_string}" -p "(search up)" "send -X search-backward-incremental \"%%%\""

# copy
bind-key -T copy-mode C-c send-keys -X copy-pipe-and-cancel "xclip -i -sel clip > /dev/null"
# bind-key -T copy-mode-vi C-c send-keys -X copy-pipe-and-cancel "xclip -i -sel clip > /dev/null"
bind-key -T copy-mode-vi C-c send-keys -X copy-pipe "xclip -i -sel clip > /dev/null"

# paste
bind-key -n C-v run "xclip -o -sel clip | tmux load-buffer - ; tmux paste-buffer"

# paste middle mouse
bind -n MouseDown2Pane run "xclip -o -sel clip | tmux load-buffer - ; tmux paste-buffer"

# previous window
bind -n M-p prev
bind -n M-1 prev

# next window
bind -n M-n next
bind -n M-2 next

# list windows
bind -n M-a choose-window

# new window
bind -n M-t new-window -c "#{pane_current_path}" \; command-prompt "rename-window %1"

# kill window
bind -n C-M-w kill-window

# rename
bind -n M-r command-prompt "rename-window %1"

# reload config
bind-key -r 0 source-file ~/.tmux.conf

# split panes
bind-key -r 1 split-window -h -c "#{pane_current_path}"
bind-key -r 2 split-window -v -c "#{pane_current_path}"

bind-key -n C-1 split-window -v -c "#{pane_current_path}"
bind-key -n C-2 split-window -h -c "#{pane_current_path}"

bind -n S-Right next-window
bind -n S-Left previous-window

# also ctrl-b x to kill a split pane
bind-key -n C-M-x confirm-before -p "kill-pane #P? (y/n)" kill-pane

# switch panes
bind -n M-o select-pane -t :.+

# cancel
bind-key -T copy-mode-vi M-j send-keys -X cancel


#---------------------------------------------
#-- Mouse
#---------------------------------------------
# copy world double click
bind-key -T copy-mode-vi DoubleClick1Pane \
    select-pane \; \
    send-keys -X select-word-no-clear \; \
    send-keys -X copy-pipe-and-cancel "xclip -i -sel clip > /dev/null"
bind-key -n DoubleClick1Pane \
    select-pane \; \
    copy-mode -M \; \
    send-keys -X select-word \; \
    send-keys -X copy-pipe-and-cancel "xclip -i -sel clip > /dev/null"

# triple lmb select & copy (line)
bind-key -T copy-mode-vi TripleClick1Pane \
    select-pane \; \
    send-keys -X select-line \; \
    send-keys -X copy-pipe-and-cancel "xclip -i -sel clip > /dev/null"
bind-key -n TripleClick1Pane \
    select-pane \; \
    copy-mode -M \; \
    send-keys -X select-line \; \
    send-keys -X copy-pipe-and-cancel "xclip -i -sel clip > /dev/null"

# selection keep
bind-key -T copy-mode MouseDragEnd1Pane send-keys -X copy-pipe-no-clear pbcopy
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-no-clear pbcopy



#---------------------------------------------
#-- Resouces
#---------------------------------------------

#-- Example setting status lines
# https://waylonwalker.com/tmux-status-bar/
# set -g window-status-format "#[fg=black,bold bg=default]│#[fg=colour135 bg=black]#W#[fg=black,bold bg=default]│"
# set -g status-left "working on#[fg=colour135] #S"
# set -g status-left "#[fg=magenta] #[bg=gray]"
# set -g status-right "#[fg=magenta] #[bg=gray] %b %d %Y %l:%M %p"
# set -g window-status-current-format "#[fg=black,bold bg=default]│#[fg=red bg=default]#I #W#[fg=black,bold bg=default]│"

# Right status
# set -g status-right '#(gitmux "#{pane_current_path}")'
# set -g status-justify centre

# set -g status-right '%d %m '
# set -g status-right-length 50
# set -g status-left-length 20

# setw -g window-status-format         ' #(echo "#{pane_current_command}") '
# setw -g window-status-current-format ' #(echo "#{pane_current_command}") '



# tmux list-keys            # list tmux existing keys

# go up 4 lines
# bind-key -T copy-mode-vi S-k command-prompt -N -I 4 -p (repeat) { send-keys -N "send-keys -X cursor-up" } 
# command-prompt -N -I 4 -p (repeat) { send-keys -N "%%" }

# change set prefix
# unbind C-b
# set -g prefix C-q
# bind C-q send-prefix

# copy mode, C-s search,  alt+w to copy and mouse middle or C-q ] to paste
# bind -n C-s copy-mode \; command-prompt -i -I "#{pane_search_string}" -p "(search down)" "send -X search-forward-incremental \"%%%\""

# auto copy disable this because it messes C-v because of mouse
# bind -T copy-mode MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'xclip -i -sel clip > /dev/null'

# set-window-option -g mode-keys vi         # to enable vim mode

# Something shortcut doesn't work, then kill the tmux session
# hold left shift button to copy text

# List of plugins
# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# run '~/.tmux/plugins/tpm/tpm'

# prefix + %  split horizontally
# prefix + "  split vertically
# prefix + arrow    move around pane
# prefix + x        close current pane

# add status line
# set-option -ag status-right "#[fg=red,dim,bg=default]#(uptime | cut -f 4-5 -d ' ' | cut -f 1 -d ',') "
